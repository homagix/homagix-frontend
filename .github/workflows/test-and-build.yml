# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup nodejs version
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci

      - name: Cache node modules
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node version
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@9c40092201880911f548e01912ae560205b4b135 # tag=v0.6.1
        with:
          barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
          lcov-file: "./coverage/lcov.info"
          base-lcov-file: "./coverage/lcov.info"
          # minimum-ratio: 0 # Fails Github action once code coverage is decreasing
          send-summary-comment: true
          show-annotations: "warning" # Possible options warning|error

  # cypress-run:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cypress run
  #       uses: cypress-io/github-action@v2
  #       env:
  #         PORT: 3000
  #       with:
  #         build: npm run build
  #         start: npm start

  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      # - cypress-run
    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node version
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci

      - name: Build production code
        run: npm run build

      - name: Deploy to github pages ðŸš€
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: JamesIves/github-pages-deploy-action@e6d003d0839927f5a4b998bfd92ed8e448fde37a # tag=v4.3.4
        with:
          branch: gh-pages
          folder: dist

  # deploy-to-docker:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - unit-tests
  #     - cypress-run
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Docker meta
  #       id: docker_meta
  #       uses: crazy-max/ghaction-docker-meta@v2
  #       with:
  #         images: joschi64/homagix-frontend

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.docker_meta.outputs.tags }}
  #         labels: ${{ steps.docker_meta.outputs.labels }}
